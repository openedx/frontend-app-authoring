// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TranscriptActionMenu Snapshots snapshots: renders as expected with default props: dont show confirm delete 1`] = `
<Dropdown>
  <Dropdown.Toggle
    alt="Actions dropdown"
    as="IconButton"
    iconAs="Icon"
    id="dropdown-toggle-with-iconbutton-video-transcript-widget"
    variant="primary"
  />
  <Dropdown.Menu
    className="video_transcript Action Menu"
  >
    <Dropdown.Item
      key="transcript-actions-sOmenUmBer-replace"
      onClick={[MockFunction click input]}
    >
      <FormattedMessage
        defaultMessage="Replace"
        description="Message Presented To user for action to replace transcript"
        id="authoring.videoeditor.transcript.replaceTranscript"
      />
    </Dropdown.Item>
    <Dropdown.Item
      key="transcript-actions-sOmenUmBer-download"
    >
      <FormattedMessage
        defaultMessage="Download"
        description="Message Presented To user for action to download transcript"
        id="authoring.videoeditor.transcript.downloadTranscript"
      />
    </Dropdown.Item>
    <Dropdown.Item
      key="transcript-actions-sOmenUmBer-delete"
      onClick={[MockFunction launchDeleteConfirmation]}
    >
      <FormattedMessage
        defaultMessage="Delete"
        description="Message Presented To user for action to delete transcript"
        id="authoring.videoeditor.transcript.deleteTranscript"
      />
    </Dropdown.Item>
  </Dropdown.Menu>
  <FileInput
    acceptedFiles=".srt"
    fileInput={
      {
        "click": [MockFunction click input],
        "onAddFile": [MockFunction module.hooks.replaceFileCallback],
      }
    }
  />
</Dropdown>
`;

exports[`TranscriptActionMenu Snapshots snapshots: renders as expected with transcriptUrl props: dont show confirm delete 1`] = `
<Dropdown>
  <Dropdown.Toggle
    alt="Actions dropdown"
    as="IconButton"
    iconAs="Icon"
    id="dropdown-toggle-with-iconbutton-video-transcript-widget"
    variant="primary"
  />
  <Dropdown.Menu
    className="video_transcript Action Menu"
  >
    <Dropdown.Item
      key="transcript-actions-sOmenUmBer-replace"
      onClick={[MockFunction click input]}
    >
      <FormattedMessage
        defaultMessage="Replace"
        description="Message Presented To user for action to replace transcript"
        id="authoring.videoeditor.transcript.replaceTranscript"
      />
    </Dropdown.Item>
    <Dropdown.Item
      key="transcript-actions-sOmenUmBer-download"
    >
      <FormattedMessage
        defaultMessage="Download"
        description="Message Presented To user for action to download transcript"
        id="authoring.videoeditor.transcript.downloadTranscript"
      />
    </Dropdown.Item>
    <Dropdown.Item
      key="transcript-actions-sOmenUmBer-delete"
      onClick={[MockFunction launchDeleteConfirmation]}
    >
      <FormattedMessage
        defaultMessage="Delete"
        description="Message Presented To user for action to delete transcript"
        id="authoring.videoeditor.transcript.deleteTranscript"
      />
    </Dropdown.Item>
  </Dropdown.Menu>
  <FileInput
    acceptedFiles=".srt"
    fileInput={
      {
        "click": [MockFunction click input],
        "onAddFile": [MockFunction module.hooks.replaceFileCallback],
      }
    }
  />
</Dropdown>
`;
