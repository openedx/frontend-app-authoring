// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TranscriptWidget component snapshots snapshot: render when \`isCreateWorkflow\` is \`True\` 1`] = `
<div
  className="mr-4 ml-4"
>
  <withDeprecatedProps(Card)
    className="bg-light-200"
  >
    <ForwardRef
      muted={false}
      skeletonHeight={100}
      title={
        <div
          className="text-gray-500"
        >
          Transcripts
        </div>
      }
    >
      <div
        className="d-flex justify-content-around text-gray-700 pb-4 x-small"
      >
        To add transcripts, save and reopen this video
      </div>
    </ForwardRef>
  </withDeprecatedProps(Card)>
</div>
`;

exports[`TranscriptWidget component snapshots snapshot: renders ErrorAlert with delete error message 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="English"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={true}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <FormGroup
      className="border-primary-100 border-bottom"
    >
      <Transcript
        index={0}
        language="en"
      />
      <ActionRow
        as="div"
        className="mt-3.5"
        isStacked={false}
      >
        <ForwardRef
          checked={false}
          className="decorative-control-label"
          controlAs={
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "className": undefined,
                "isIndeterminate": false,
              },
              "propTypes": {
                "className": [Function],
                "isIndeterminate": [Function],
              },
              "render": [Function],
            }
          }
          disabled={false}
          floatLabelLeft={false}
          isInvalid={false}
          isValid={false}
          onChange={[Function]}
        >
          <div
            className="small text-gray-700"
          >
            <Memo(MemoizedFormattedMessage)
              defaultMessage="Allow transcript downloads"
              description="Label for allow transcript downloads checkbox"
              id="authoring.videoeditor.transcripts.allowDownloadCheckboxLabel"
            />
          </div>
        </ForwardRef>
        <OverlayTrigger
          defaultShow={false}
          key="top"
          overlay={
            <ForwardRef
              bsPrefix="tooltip"
              id="tooltip-top"
              placement="right"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Learners will see a link to download the transcript below the video."
                description="Message for show by default checkbox"
                id="authoring.videoeditor.transcripts.upload.allowDownloadTooltipMessage"
              />
            </ForwardRef>
          }
          placement="top"
          popperConfig={{}}
          trigger={
            [
              "hover",
              "focus",
            ]
          }
        >
          <withDeprecatedProps(Icon)
            src={[Function]}
            style={
              {
                "height": "16px",
                "width": "16px",
              }
            }
          />
        </OverlayTrigger>
        <ActionRowSpacer />
      </ActionRow>
      <ForwardRef
        checked={false}
        className="mt-3 decorative-control-label"
        controlAs={
          {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": {
              "className": undefined,
              "isIndeterminate": false,
            },
            "propTypes": {
              "className": [Function],
              "isIndeterminate": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        floatLabelLeft={false}
        isInvalid={false}
        isValid={false}
        onChange={[Function]}
      >
        <div
          className="small text-gray-700"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Show transcript in the video player by default"
            description="Label for show by default checkbox"
            id="authoring.videoeditor.transcripts.upload.showByDefaultCheckboxLabel"
          />
        </div>
      </ForwardRef>
    </FormGroup>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;

exports[`TranscriptWidget component snapshots snapshot: renders ErrorAlert with upload error message 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="English, French"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={true}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <FormGroup
      className="border-primary-100 border-bottom"
    >
      <Transcript
        index={0}
        language="en"
      />
      <Transcript
        index={1}
        language="fr"
      />
      <ActionRow
        as="div"
        className="mt-3.5"
        isStacked={false}
      >
        <ForwardRef
          checked={false}
          className="decorative-control-label"
          controlAs={
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "className": undefined,
                "isIndeterminate": false,
              },
              "propTypes": {
                "className": [Function],
                "isIndeterminate": [Function],
              },
              "render": [Function],
            }
          }
          disabled={false}
          floatLabelLeft={false}
          isInvalid={false}
          isValid={false}
          onChange={[Function]}
        >
          <div
            className="small text-gray-700"
          >
            <Memo(MemoizedFormattedMessage)
              defaultMessage="Allow transcript downloads"
              description="Label for allow transcript downloads checkbox"
              id="authoring.videoeditor.transcripts.allowDownloadCheckboxLabel"
            />
          </div>
        </ForwardRef>
        <OverlayTrigger
          defaultShow={false}
          key="top"
          overlay={
            <ForwardRef
              bsPrefix="tooltip"
              id="tooltip-top"
              placement="right"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Learners will see a link to download the transcript below the video."
                description="Message for show by default checkbox"
                id="authoring.videoeditor.transcripts.upload.allowDownloadTooltipMessage"
              />
            </ForwardRef>
          }
          placement="top"
          popperConfig={{}}
          trigger={
            [
              "hover",
              "focus",
            ]
          }
        >
          <withDeprecatedProps(Icon)
            src={[Function]}
            style={
              {
                "height": "16px",
                "width": "16px",
              }
            }
          />
        </OverlayTrigger>
        <ActionRowSpacer />
      </ActionRow>
      <ForwardRef
        checked={false}
        className="mt-3 decorative-control-label"
        controlAs={
          {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": {
              "className": undefined,
              "isIndeterminate": false,
            },
            "propTypes": {
              "className": [Function],
              "isIndeterminate": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        floatLabelLeft={false}
        isInvalid={false}
        isValid={false}
        onChange={[Function]}
      >
        <div
          className="small text-gray-700"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Show transcript in the video player by default"
            description="Label for show by default checkbox"
            id="authoring.videoeditor.transcripts.upload.showByDefaultCheckboxLabel"
          />
        </div>
      </ForwardRef>
    </FormGroup>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;

exports[`TranscriptWidget component snapshots snapshots: renders as expected with allowTranscriptDownloads true 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="English"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <FormGroup
      className="border-primary-100 border-bottom"
    >
      <Transcript
        index={0}
        language="en"
      />
      <ActionRow
        as="div"
        className="mt-3.5"
        isStacked={false}
      >
        <ForwardRef
          checked={true}
          className="decorative-control-label"
          controlAs={
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "className": undefined,
                "isIndeterminate": false,
              },
              "propTypes": {
                "className": [Function],
                "isIndeterminate": [Function],
              },
              "render": [Function],
            }
          }
          disabled={false}
          floatLabelLeft={false}
          isInvalid={false}
          isValid={false}
          onChange={[Function]}
        >
          <div
            className="small text-gray-700"
          >
            <Memo(MemoizedFormattedMessage)
              defaultMessage="Allow transcript downloads"
              description="Label for allow transcript downloads checkbox"
              id="authoring.videoeditor.transcripts.allowDownloadCheckboxLabel"
            />
          </div>
        </ForwardRef>
        <OverlayTrigger
          defaultShow={false}
          key="top"
          overlay={
            <ForwardRef
              bsPrefix="tooltip"
              id="tooltip-top"
              placement="right"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Learners will see a link to download the transcript below the video."
                description="Message for show by default checkbox"
                id="authoring.videoeditor.transcripts.upload.allowDownloadTooltipMessage"
              />
            </ForwardRef>
          }
          placement="top"
          popperConfig={{}}
          trigger={
            [
              "hover",
              "focus",
            ]
          }
        >
          <withDeprecatedProps(Icon)
            src={[Function]}
            style={
              {
                "height": "16px",
                "width": "16px",
              }
            }
          />
        </OverlayTrigger>
        <ActionRowSpacer />
      </ActionRow>
      <ForwardRef
        checked={false}
        className="mt-3 decorative-control-label"
        controlAs={
          {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": {
              "className": undefined,
              "isIndeterminate": false,
            },
            "propTypes": {
              "className": [Function],
              "isIndeterminate": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        floatLabelLeft={false}
        isInvalid={false}
        isValid={false}
        onChange={[Function]}
      >
        <div
          className="small text-gray-700"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Show transcript in the video player by default"
            description="Label for show by default checkbox"
            id="authoring.videoeditor.transcripts.upload.showByDefaultCheckboxLabel"
          />
        </div>
      </ForwardRef>
    </FormGroup>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;

exports[`TranscriptWidget component snapshots snapshots: renders as expected with allowTranscriptImport true 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="None"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <Fragment>
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Add video transcripts (.srt files only) for improved accessibility."
        description="Message for adding first transcript"
        id="authoring.videoeditor.transcripts.upload.firstTranscriptMessage"
      />
      <injectIntl(ShimmedIntlComponent)
        setOpen={[Function]}
      />
    </Fragment>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;

exports[`TranscriptWidget component snapshots snapshots: renders as expected with default props 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="None"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <Fragment>
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Add video transcripts (.srt files only) for improved accessibility."
        description="Message for adding first transcript"
        id="authoring.videoeditor.transcripts.upload.firstTranscriptMessage"
      />
    </Fragment>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;

exports[`TranscriptWidget component snapshots snapshots: renders as expected with showTranscriptByDefault true 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="English"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <FormGroup
      className="border-primary-100 border-bottom"
    >
      <Transcript
        index={0}
        language="en"
      />
      <ActionRow
        as="div"
        className="mt-3.5"
        isStacked={false}
      >
        <ForwardRef
          checked={false}
          className="decorative-control-label"
          controlAs={
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "className": undefined,
                "isIndeterminate": false,
              },
              "propTypes": {
                "className": [Function],
                "isIndeterminate": [Function],
              },
              "render": [Function],
            }
          }
          disabled={false}
          floatLabelLeft={false}
          isInvalid={false}
          isValid={false}
          onChange={[Function]}
        >
          <div
            className="small text-gray-700"
          >
            <Memo(MemoizedFormattedMessage)
              defaultMessage="Allow transcript downloads"
              description="Label for allow transcript downloads checkbox"
              id="authoring.videoeditor.transcripts.allowDownloadCheckboxLabel"
            />
          </div>
        </ForwardRef>
        <OverlayTrigger
          defaultShow={false}
          key="top"
          overlay={
            <ForwardRef
              bsPrefix="tooltip"
              id="tooltip-top"
              placement="right"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Learners will see a link to download the transcript below the video."
                description="Message for show by default checkbox"
                id="authoring.videoeditor.transcripts.upload.allowDownloadTooltipMessage"
              />
            </ForwardRef>
          }
          placement="top"
          popperConfig={{}}
          trigger={
            [
              "hover",
              "focus",
            ]
          }
        >
          <withDeprecatedProps(Icon)
            src={[Function]}
            style={
              {
                "height": "16px",
                "width": "16px",
              }
            }
          />
        </OverlayTrigger>
        <ActionRowSpacer />
      </ActionRow>
      <ForwardRef
        checked={true}
        className="mt-3 decorative-control-label"
        controlAs={
          {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": {
              "className": undefined,
              "isIndeterminate": false,
            },
            "propTypes": {
              "className": [Function],
              "isIndeterminate": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        floatLabelLeft={false}
        isInvalid={false}
        isValid={false}
        onChange={[Function]}
      >
        <div
          className="small text-gray-700"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Show transcript in the video player by default"
            description="Label for show by default checkbox"
            id="authoring.videoeditor.transcripts.upload.showByDefaultCheckboxLabel"
          />
        </div>
      </ForwardRef>
    </FormGroup>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;

exports[`TranscriptWidget component snapshots snapshots: renders as expected with transcript urls 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="None"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <Fragment>
      <Memo(MemoizedFormattedMessage)
        defaultMessage="Add video transcripts (.srt files only) for improved accessibility."
        description="Message for adding first transcript"
        id="authoring.videoeditor.transcripts.upload.firstTranscriptMessage"
      />
    </Fragment>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;

exports[`TranscriptWidget component snapshots snapshots: renders as expected with transcripts 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="English"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <FormGroup
      className="border-primary-100 border-bottom"
    >
      <Transcript
        index={0}
        language="en"
      />
      <ActionRow
        as="div"
        className="mt-3.5"
        isStacked={false}
      >
        <ForwardRef
          checked={false}
          className="decorative-control-label"
          controlAs={
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "className": undefined,
                "isIndeterminate": false,
              },
              "propTypes": {
                "className": [Function],
                "isIndeterminate": [Function],
              },
              "render": [Function],
            }
          }
          disabled={false}
          floatLabelLeft={false}
          isInvalid={false}
          isValid={false}
          onChange={[Function]}
        >
          <div
            className="small text-gray-700"
          >
            <Memo(MemoizedFormattedMessage)
              defaultMessage="Allow transcript downloads"
              description="Label for allow transcript downloads checkbox"
              id="authoring.videoeditor.transcripts.allowDownloadCheckboxLabel"
            />
          </div>
        </ForwardRef>
        <OverlayTrigger
          defaultShow={false}
          key="top"
          overlay={
            <ForwardRef
              bsPrefix="tooltip"
              id="tooltip-top"
              placement="right"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Learners will see a link to download the transcript below the video."
                description="Message for show by default checkbox"
                id="authoring.videoeditor.transcripts.upload.allowDownloadTooltipMessage"
              />
            </ForwardRef>
          }
          placement="top"
          popperConfig={{}}
          trigger={
            [
              "hover",
              "focus",
            ]
          }
        >
          <withDeprecatedProps(Icon)
            src={[Function]}
            style={
              {
                "height": "16px",
                "width": "16px",
              }
            }
          />
        </OverlayTrigger>
        <ActionRowSpacer />
      </ActionRow>
      <ForwardRef
        checked={false}
        className="mt-3 decorative-control-label"
        controlAs={
          {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": {
              "className": undefined,
              "isIndeterminate": false,
            },
            "propTypes": {
              "className": [Function],
              "isIndeterminate": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        floatLabelLeft={false}
        isInvalid={false}
        isValid={false}
        onChange={[Function]}
      >
        <div
          className="small text-gray-700"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Show transcript in the video player by default"
            description="Label for show by default checkbox"
            id="authoring.videoeditor.transcripts.upload.showByDefaultCheckboxLabel"
          />
        </div>
      </ForwardRef>
    </FormGroup>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;

exports[`TranscriptWidget component snapshots snapshots: renders as expected with transcripts and urls 1`] = `
<CollapsibleFormWidget
  fontSize="x-small"
  isError={true}
  subtitle="Spanish"
  title="Transcripts"
>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to upload transcript. Please try again."
      description="Message presented to user when transcript fails to upload"
      id="authoring.videoeditor.transcript.error.uploadTranscriptError"
    />
  </ErrorAlert>
  <ErrorAlert
    dismissError={null}
    hideHeading={true}
    isError={false}
  >
    <Memo(MemoizedFormattedMessage)
      defaultMessage="Failed to delete transcript. Please try again."
      description="Message presented to user when transcript fails to delete"
      id="authoring.videoeditor.transcript.error.deleteTranscriptError"
    />
  </ErrorAlert>
  <ForwardRef
    direction="vertical"
    gap={3}
    reversed={false}
  >
    <FormGroup
      className="border-primary-100 border-bottom"
    >
      <Transcript
        index={0}
        language="es"
      />
      <ActionRow
        as="div"
        className="mt-3.5"
        isStacked={false}
      >
        <ForwardRef
          checked={false}
          className="decorative-control-label"
          controlAs={
            {
              "$$typeof": Symbol(react.forward_ref),
              "defaultProps": {
                "className": undefined,
                "isIndeterminate": false,
              },
              "propTypes": {
                "className": [Function],
                "isIndeterminate": [Function],
              },
              "render": [Function],
            }
          }
          disabled={false}
          floatLabelLeft={false}
          isInvalid={false}
          isValid={false}
          onChange={[Function]}
        >
          <div
            className="small text-gray-700"
          >
            <Memo(MemoizedFormattedMessage)
              defaultMessage="Allow transcript downloads"
              description="Label for allow transcript downloads checkbox"
              id="authoring.videoeditor.transcripts.allowDownloadCheckboxLabel"
            />
          </div>
        </ForwardRef>
        <OverlayTrigger
          defaultShow={false}
          key="top"
          overlay={
            <ForwardRef
              bsPrefix="tooltip"
              id="tooltip-top"
              placement="right"
            >
              <Memo(MemoizedFormattedMessage)
                defaultMessage="Learners will see a link to download the transcript below the video."
                description="Message for show by default checkbox"
                id="authoring.videoeditor.transcripts.upload.allowDownloadTooltipMessage"
              />
            </ForwardRef>
          }
          placement="top"
          popperConfig={{}}
          trigger={
            [
              "hover",
              "focus",
            ]
          }
        >
          <withDeprecatedProps(Icon)
            src={[Function]}
            style={
              {
                "height": "16px",
                "width": "16px",
              }
            }
          />
        </OverlayTrigger>
        <ActionRowSpacer />
      </ActionRow>
      <ForwardRef
        checked={false}
        className="mt-3 decorative-control-label"
        controlAs={
          {
            "$$typeof": Symbol(react.forward_ref),
            "defaultProps": {
              "className": undefined,
              "isIndeterminate": false,
            },
            "propTypes": {
              "className": [Function],
              "isIndeterminate": [Function],
            },
            "render": [Function],
          }
        }
        disabled={false}
        floatLabelLeft={false}
        isInvalid={false}
        isValid={false}
        onChange={[Function]}
      >
        <div
          className="small text-gray-700"
        >
          <Memo(MemoizedFormattedMessage)
            defaultMessage="Show transcript in the video player by default"
            description="Label for show by default checkbox"
            id="authoring.videoeditor.transcripts.upload.showByDefaultCheckboxLabel"
          />
        </div>
      </ForwardRef>
    </FormGroup>
    <div
      className="mt-2"
    >
      <ForwardRef
        className="text-primary-500 font-weight-bold justify-content-start pl-0"
        disabled={false}
        iconBefore={[Function]}
        onClick={[Function]}
        size="sm"
        variant="link"
      >
        <Memo(MemoizedFormattedMessage)
          defaultMessage="Add a transcript"
          description="Label for upload button"
          id="authoring.videoeditor.transcripts.upload.label"
        />
      </ForwardRef>
    </div>
  </ForwardRef>
</CollapsibleFormWidget>
`;
