// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ThumbnailWidget snapshots snapshots: renders as expected where thumbnail uploads are allowed 1`] = `null`;

exports[`ThumbnailWidget snapshots snapshots: renders as expected where videoId is valid 1`] = `
<injectIntl(ShimmedIntlComponent)
  fontSize="x-small"
  isError={true}
  subtitle="Yes"
  title="Thumbnail"
>
  <ErrorAlert
    dismissError={[Function]}
    hideHeading={true}
    isError={false}
  >
    <FormattedMessage
      defaultMessage="The file size for thumbnails must be larger than 2 KB or less than 2 MB. Please resize your image and try again."
      description=" Message presented to user when file size of image is less than 2 KB or larger than 2 MB"
      id="authoring.videoeditor.thumbnail.error.fileSizeError"
    />
  </ErrorAlert>
  <Stack
    direction="horizontal"
    gap={3}
  >
    <Image
      alt="Image used as thumbnail for video"
      className="w-75"
      fluid={true}
      src="sOMeUrl"
      thumbnail={true}
    />
    <IconButtonWithTooltip
      iconAs="Icon"
      onClick={[Function]}
      tooltipContent="Delete"
      tooltipPlacement="top"
    />
  </Stack>
</injectIntl(ShimmedIntlComponent)>
`;

exports[`ThumbnailWidget snapshots snapshots: renders as expected where videoId is valid and no thumbnail 1`] = `
<injectIntl(ShimmedIntlComponent)
  fontSize="x-small"
  isError={true}
  subtitle="None"
  title="Thumbnail"
>
  <ErrorAlert
    dismissError={[Function]}
    hideHeading={true}
    isError={false}
  >
    <FormattedMessage
      defaultMessage="The file size for thumbnails must be larger than 2 KB or less than 2 MB. Please resize your image and try again."
      description=" Message presented to user when file size of image is less than 2 KB or larger than 2 MB"
      id="authoring.videoeditor.thumbnail.error.fileSizeError"
    />
  </ErrorAlert>
  <Stack
    gap={4}
  >
    <div
      className="text-center"
    >
      <FormattedMessage
        defaultMessage="Upload an image for learners to see before playing the video."
        description="Message for adding thumbnail"
        id="authoring.videoeditor.thumbnail.upload.message"
      />
      <div
        className="text-primary-300"
      >
        <FormattedMessage
          defaultMessage="Images must have an aspect ratio of 16:9 (1280x720 px recommended)"
          description="Message for thumbnail aspectRequirements"
          id="authoring.videoeditor.thumbnail.upload.aspectRequirements"
        />
      </div>
    </div>
    <FileInput
      acceptedFiles=".gif,.jpg,.jpeg,.png,.bmp,.bmp2"
      fileInput={
        {
          "addFile": [Function],
          "click": [Function],
          "ref": {
            "current": undefined,
          },
        }
      }
    />
    <Button
      className="text-primary-500 font-weight-bold justify-content-start pl-0"
      disabled={false}
      onClick={[Function]}
      size="sm"
      variant="link"
    >
      <FormattedMessage
        defaultMessage="Upload thumbnail"
        description="Label for upload button"
        id="authoring.videoeditor.thumbnail.upload.label"
      />
    </Button>
  </Stack>
</injectIntl(ShimmedIntlComponent)>
`;

exports[`ThumbnailWidget snapshots snapshots: renders as expected with a thumbnail provided 1`] = `
<injectIntl(ShimmedIntlComponent)
  fontSize="x-small"
  isError={true}
  subtitle="Yes"
  title="Thumbnail"
>
  <ErrorAlert
    dismissError={[Function]}
    hideHeading={true}
    isError={false}
  >
    <FormattedMessage
      defaultMessage="The file size for thumbnails must be larger than 2 KB or less than 2 MB. Please resize your image and try again."
      description=" Message presented to user when file size of image is less than 2 KB or larger than 2 MB"
      id="authoring.videoeditor.thumbnail.error.fileSizeError"
    />
  </ErrorAlert>
  <Alert
    variant="light"
  >
    <FormattedMessage
      defaultMessage="Select a video from your library to enable this feature (applies only to courses that run on the edx.org site)."
      description="Message for unavailable thumbnail widget"
      id="authoring.videoeditor.thumbnail.unavailable.message"
    />
  </Alert>
  <Stack
    direction="horizontal"
    gap={3}
  >
    <Image
      alt="Image used as thumbnail for video"
      className="w-75"
      fluid={true}
      src="sOMeUrl"
      thumbnail={true}
    />
  </Stack>
</injectIntl(ShimmedIntlComponent)>
`;

exports[`ThumbnailWidget snapshots snapshots: renders as expected with default props 1`] = `null`;

exports[`ThumbnailWidget snapshots snapshots: renders as expected with isLibrary true 1`] = `null`;
